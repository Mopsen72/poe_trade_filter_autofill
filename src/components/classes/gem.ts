import {CBaseItem} from "./base";
import {IAdditionalPattern} from "../parser/types.ts";
import {
    AILMENT_SPEED,
    AREA_PRESENCE,
    BOW_ATTACK_SPEED,
    BOW_DAMAGE,
    CRITICAL_CHANCE,
    CROSSBOW_ATTACK_SPEED,
    CROSSBOW_DAMAGE,
    FIRE_PENETRATE,
    GLOBAL_ACCURACY,
    GLOBAL_PHYSICAL_DAMAGE,
    HERALD_DAMAGE,
    ICE_PENETRATE,
    INCREASE_AILMENT_MAGNITUDE,
    INCREASE_BLEED_MAGNITUDE,
    INCREASE_CHAOS_AILMENT_MAGNITUDE,
    INCREASE_CRITICAL_DAMAGE,
    INCREASE_IGNITE_MAGNITUDE,
    INCREASE_POISON_MAGNITUDE,
    INCREASE_SHOCK_MAGNITUDE,
    LIFE_PERCENT_ON_KILL,
    LIGHTNING_PENETRATE,
    MANA_PERCENT_ON_KILL,
    PROJECTILE_DAMAGE,
    PROJECTILE_SPEED,
    SKILL_AREA,
    SPEAR_CRITICAL_DAMAGE,
    STAFF_ATTACK_SPEED,
    STAFF_DAMAGE,
    THORN_DAMAGE_PERCENT,
    TOTEM_DAMAGE,
    TOTEM_LIFE,
    TRAP_DAMAGE,
    UNIQ_DAMAGE,
} from "./consts/patterns.ts";
import {
    ADD_ARMOR_PERCENT,
    ADD_ENERGY_SHIELD_PERCENT,
    ADD_EVASION_PERCENT,
    AILMENT_PROTECTION_ENERGY_SHIELD,
    BLOCK_CHANCE,
    ENERGY_SHIELD_RECHARGE_DELAY,
    ENERGY_SHIELD_RECHARGE_SPEED,
    FOCUS_PROTECTION,
    SHIELD_PROTECTION,
    STUN_PROTECTION_ENERGY_SHIELD
} from "./consts/defencePatterns.ts";
import {MAX_COLD_RESIST, MAX_FIRE_RESIST, MAX_LIGHTNING_RESIST} from "./consts/resistPatterns.ts"
import {
    ATTACK_DAMAGE_PERCENT,
    ATTACK_SPEED,
    CRITICAL_CHANCE_ATTACK,
    CRITICAL_DAMAGE_ATTACK,
    FRENZY_ON_ATTACK,
    FRENZY_ON_TAKE_ATTACK,
    MACE_DAMAGE,
    MELEE_DAMAGE
} from "./consts/attackPatterns.ts";
import {
    AUTO_SPELL_DAMAGE,
    CHAOS_SPELL_DAMAGE,
    CRITICAL_CHANCE_SPELL,
    CRITICAL_DAMAGE_SPELL,
    FIRE_SPELL_DAMAGE,
    ICE_SPELL_DAMAGE,
    LIGHTNING_SPELL_DAMAGE,
    SPELL_CAST_SPEED,
    SPELL_DAMAGE,
    SPELL_ELEMENTAL_DAMAGE,
} from "./consts/spellPatterns.ts";
import {
    COMPANION_DAMAGE,
    COMPANION_LIFE,
    MINION_CHAOS_RESIST,
    MINION_CRITICAL_CHANCE,
    MINION_CRITICAL_DAMAGE,
    MINION_DAMAGE,
    MINION_ELEMENTAL_RESIST,
    MINION_LIFE,
    MINION_SPEED
} from "./consts/minionPatterns.ts";
import {LIFE_REGENERATION_PERCENT, MANA_REGEN} from "./consts/characterPatterns.ts";

const MODIFIER_PATTERNS: Record<string, IAdditionalPattern> = {
    MANA_REGEN,
    SKILL_AREA,
    ADD_ARMOR_PERCENT,
    ADD_EVASION_PERCENT,
    ADD_ENERGY_SHIELD_PERCENT,
    ATTACK_DAMAGE_PERCENT,
    BLOCK_CHANCE,
    SPELL_ELEMENTAL_DAMAGE,
    FIRE_SPELL_DAMAGE,
    ICE_SPELL_DAMAGE,
    LIGHTNING_SPELL_DAMAGE,
    CHAOS_SPELL_DAMAGE,
    FIRE_PENETRATE,
    ICE_PENETRATE,
    LIGHTNING_PENETRATE,
    AILMENT_SPEED,
    INCREASE_BLEED_MAGNITUDE,
    INCREASE_IGNITE_MAGNITUDE,
    INCREASE_SHOCK_MAGNITUDE,
    INCREASE_AILMENT_MAGNITUDE,
    INCREASE_POISON_MAGNITUDE,
    INCREASE_CHAOS_AILMENT_MAGNITUDE,
    CRITICAL_CHANCE,
    INCREASE_CRITICAL_DAMAGE,
    ATTACK_SPEED,
    CRITICAL_CHANCE_ATTACK,
    CRITICAL_DAMAGE_ATTACK,
    CRITICAL_CHANCE_SPELL,
    CRITICAL_DAMAGE_SPELL,
    SPELL_CAST_SPEED,
    SPELL_DAMAGE,
    UNIQ_DAMAGE,
    MACE_DAMAGE,
    BOW_DAMAGE,
    BOW_ATTACK_SPEED,
    STAFF_DAMAGE,
    STAFF_ATTACK_SPEED,
    CROSSBOW_DAMAGE,
    CROSSBOW_ATTACK_SPEED,
    SPEAR_CRITICAL_DAMAGE,
    TRAP_DAMAGE,
    HERALD_DAMAGE,
    MELEE_DAMAGE,
    MINION_LIFE,
    GLOBAL_PHYSICAL_DAMAGE,
    SHIELD_PROTECTION,
    THORN_DAMAGE_PERCENT,
    TOTEM_DAMAGE,
    TOTEM_LIFE,
    AREA_PRESENCE,
    LIFE_REGENERATION_PERCENT,
    MAX_COLD_RESIST,
    MAX_FIRE_RESIST,
    MAX_LIGHTNING_RESIST,
    FRENZY_ON_ATTACK,
    FRENZY_ON_TAKE_ATTACK,
    GLOBAL_ACCURACY,
    PROJECTILE_DAMAGE,
    PROJECTILE_SPEED,
    COMPANION_DAMAGE,
    COMPANION_LIFE,
    MINION_DAMAGE,
    MINION_SPEED,
    MINION_ELEMENTAL_RESIST,
    MINION_CHAOS_RESIST,
    MINION_CRITICAL_CHANCE,
    MINION_CRITICAL_DAMAGE,
    FOCUS_PROTECTION,
    ENERGY_SHIELD_RECHARGE_SPEED,
    ENERGY_SHIELD_RECHARGE_DELAY,
    AUTO_SPELL_DAMAGE,
    MANA_PERCENT_ON_KILL,
    LIFE_PERCENT_ON_KILL,
    STUN_PROTECTION_ENERGY_SHIELD,
    AILMENT_PROTECTION_ENERGY_SHIELD,

}

export class CGem extends CBaseItem {

    constructor(stringItem: string) {
        super(stringItem, MODIFIER_PATTERNS);
    }
}